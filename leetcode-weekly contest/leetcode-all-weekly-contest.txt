
====================================================================================================
-- 414 (https://www.youtube.com/watch?v=2x1k09K4oeg)


-- COnvert date to binary 


-- https://leetcode.com/problems/convert-date-to-binary/submissions/1390638305/
--


--
class Solution:
    def convertDateToBinary(self, date: str) -> str:

        def num_to_binary(n):
            num = int(n)
            ans = ""
            while num:
                if num & 1:
                    ans += "1"
                else:
                    ans += "0"
                num = num >> 1
            return ans[::-1]
        
        year = date[:4]
        month = date[5:7]
        day = date[8:]

        return num_to_binary(year) + "-" + num_to_binary(month) + "-" + num_to_binary(day)
--


==============================================================================================================

-- Maximize score of numbers in range


-- https://leetcode.com/problems/maximize-score-of-numbers-in-ranges/
--


--
from typing import List

class Solution:
    def maxPossibleScore(self, a: List[int], d: int) -> int:

        def checker(mid, num):
            temp_a = a[:]
            
            # Start at the second element and try to ensure all differences >= mid
            for i in range(1, len(temp_a)):
                if abs(temp_a[i] - temp_a[i - 1]) >= mid:
                    continue
                else:
                    # Try adding `num` to temp_a[i] to satisfy the condition
                    if abs(temp_a[i] + num - temp_a[i - 1]) < mid:
                        return False
                    temp_a[i] = temp_a[i - 1] + mid
            return True
        
        left = 0
        right = 2 * 10**9  # Max possible difference can be 2 billion (based on the input constraints)
        ans = 0

        a.sort()

        while left <= right:
            mid = (left + right) // 2
            if checker(mid, d):
                ans = mid
                left = mid + 1
            else:
                right = mid - 1

        return ans




--

=========================================================================================================================

-- 