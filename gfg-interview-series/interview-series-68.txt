-- https://www.youtube.com/watch?v=fdnvPurbs9Y


-- Geek hates too amy 1s

-- 
class Solution:
    def noConseBits(self, query : int) -> int:
        cnt = 0
        for i in range(31, -1, -1):
            if (query & (1 << i)) > 0:
                cnt += 1
                if cnt == 3:
                    query ^= (1<<i)
                    cnt = 0
            else:
                cnt = 0
        return que
-- 

===========================================================================================================================

-- Remove the balls

-- 
from typing import List


class Solution:
    def finLength(self, N : int, color : List[int], radius : List[int]) -> int:
        s = [(color[0], radius[0])]
        i = 1
        while i < N:
            if s and (color[i], radius[i]) == s[-1]:
                s.pop()
            else:
                s.append((color[i], radius[i]))
            i+= 1
        return len(s)
            
--

========================================================================================================================================

